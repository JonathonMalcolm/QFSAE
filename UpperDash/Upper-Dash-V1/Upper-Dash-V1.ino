#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

// Shift Registers ====================================================================
#define latchPIN    4 // pin 3 on ATMega328P
#define clockPIN    7 // pin 11 on ATMega328P
#define dataPIN     3 // pin 1 on ATMega328P
#define pinQ0       1
#define pinQ1       2
#define pinQ2       4
#define pinQ3       8
#define pinQ4      16
#define pinQ5      32
#define pinQ6      64
#define pinQ7     128
int SR1 = 0, SR2 = 0, SR3 = 255, SR4 = 0, SR5 = 0, SR6 = 0;

// Shift Lights =======================================================================
#define sRPM1    6800
#define sRPM2    7400
#define sRPM3    8000
#define sRPM4    8600
#define sRPM5    9200
#define sRPM6    9800
#define sRPM7   10400
#define sRPM8   11000
#define sRPM9   11600
#define sRPM10  12000
#define sRPM11  12200
#define sRPM12  12300
#define sLED1   pinQ2 //SR2 
#define sLED2   pinQ3 //SR2 
#define sLED3   pinQ4 //SR2 
#define sLED4   pinQ5 //SR2 
#define sLED5   pinQ6 //SR2
#define sLED6   pinQ7 //SR2
#define sLED7   pinQ7 //SR1
#define sLED8   pinQ6 //SR1
#define sLED9   pinQ2 //SR1
#define sLED10  pinQ3 //SR1
#define sLED11  pinQ4 //SR1
#define sLED12  pinQ5 //SR1
#define rpmFlashTime 75 // RPM Flash timing (ms)

// 7 Segment ==========================================================================
#define ssC pinQ1 //SR3
#define ssD pinQ2 //SR3  
#define ssE pinQ3 //SR3
#define ssG pinQ4 //SR3
#define ssF pinQ5 //SR3
#define ssA pinQ6 //SR3
#define ssB pinQ7 //SR3
int ssCount = 1;
int seg1;
int seg2;
int seg3;
int seg4;
int seg5;
int seg6;

// OLED ===============================================================================
#define OLED_MOSI  9        //Data
#define OLED_CLK   8        //Clk
#define OLED_DC    5//11    //DC/SA0
#define OLED_CS    6//13    //CS
#define OLED_RESET 14       //Rst
Adafruit_SSD1306 display(128, 64, OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);
int OLEDMode = 1;
int allowCycle = 0;
int switchMode = 0;
// Formula Logo -----------------------------------------------------------------------
static const unsigned char PROGMEM QFSAELogo[] = {
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000001, B11111111, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B11111111, B10000000, B00000000,
  B00000000, B00000000, B11111111, B11111000, B00000000, B00000000, B00000000, B00000011, B00000000, B00000000, B00000000, B00000000, B00011111, B11111111, B00000000, B00000000,
  B00000000, B00000000, B01100000, B00011100, B00000000, B00000000, B00000000, B00011111, B11100000, B00000000, B00000000, B00000000, B00111000, B00000110, B00000000, B00000000,
  B00000000, B00000000, B00110000, B00000111, B11111111, B11111111, B11111111, B11111100, B11111111, B11111111, B11111111, B11111111, B11100000, B00001100, B00000000, B00000000,
  B00000000, B00000000, B00011000, B00000011, B11111111, B11111111, B11111111, B11111000, B00111111, B11111111, B11111111, B11111111, B11000000, B00011000, B00000000, B00000000,
  B00000000, B00000000, B00001100, B00000000, B00000000, B00000000, B00000000, B01100000, B00011100, B00000000, B00000000, B00000000, B00000000, B00110000, B00000000, B00000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000001, B11000000, B00001110, B00000000, B00000000, B00000000, B00000000, B01100000, B00000000, B00000000,
  B00000000, B00000000, B00000011, B11111111, B11111111, B10000000, B00000001, B10000000, B00000111, B00000000, B00000011, B11111111, B11111111, B11000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00001111, B11111111, B11111111, B11111111, B10000000, B00000011, B11111111, B11111111, B11111111, B11110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B00000000, B00000011, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000110, B00000000, B00000001, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001110, B00000000, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B01100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00011111, B11111111, B11111111, B11000000, B00000000, B00000000, B00111000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000111, B11111111, B11111111, B11100000,
  B01111111, B11111111, B11111111, B11111111, B00000000, B00000000, B01110000, B00000000, B00000000, B00111000, B00000000, B00000001, B11111111, B11111111, B11111111, B11111000,
  B11111100, B00000000, B00000011, B11111111, B11000000, B00000000, B11100000, B00000000, B00000000, B00011100, B00000000, B00001111, B11111111, B00000000, B00000000, B11111100,
  B11110000, B00000000, B00000000, B00000011, B11100000, B00000000, B11000000, B00000111, B11000000, B00001110, B00000000, B00001111, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11100000, B00000000, B11000000, B00011111, B11110000, B00001110, B00000000, B00011110, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11100000, B00000001, B11000000, B00111100, B01111000, B00000110, B00000000, B00011100, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B01100000, B00000011, B00000111, B11110000, B00011111, B10000011, B00000000, B00011000, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B01100111, B11111111, B11111111, B11100000, B00001111, B11111111, B11111111, B10011000, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11111111, B11111111, B00001111, B11000000, B00000111, B11000001, B11111111, B11111100, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11100000, B00000000, B11111011, B10000000, B00000011, B11111110, B00000000, B00011100, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11100000, B00001111, B10000111, B00000000, B00000001, B11000111, B11100000, B00011100, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11100000, B11111000, B00001110, B00000000, B00000000, B11100000, B00111100, B00011100, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11100111, B10000000, B00011100, B00000000, B00000000, B01110000, B00000111, B10011100, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B11101100, B00000000, B00011100, B00000000, B00000000, B01110000, B00000000, B11011110, B00000000, B00000000, B00000000, B00111100,
  B11110000, B00000000, B00000000, B00000000, B01100000, B00000000, B00111000, B00000000, B00000000, B00111000, B00000000, B00011000, B00000000, B00000000, B00000000, B00111100,
  B01110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000,
  B01110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000,
  B01110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000,
  B01110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000,
  B01110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000,
  B01110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000,
  B01110000, B00011111, B11111110, B00111111, B11111110, B01111111, B11110001, B11000000, B00001100, B11000000, B00001011, B00000000, B00000000, B00010000, B00000000, B00111000,
  B01111000, B00011111, B11111111, B01111111, B11111111, B01111111, B11111101, B11100000, B00011101, B11000000, B00011011, B00000100, B00000000, B00111000, B00000000, B01111000,
  B01111111, B00001111, B11111111, B01110000, B00000111, B01111111, B11111101, B11110000, B00111101, B11000000, B00011011, B00000110, B00000000, B00011100, B00000111, B11111000,
  B00111111, B00000000, B00000000, B01100000, B00000011, B00000000, B00011101, B11111000, B01111101, B11000000, B00011011, B00011111, B00000000, B00001110, B00000111, B11110000,
  B00000000, B00011111, B11111111, B01100000, B00000011, B01111111, B11111001, B11011111, B11101101, B11000000, B00011011, B00001110, B00000000, B00000111, B00000000, B00000000,
  B00000000, B00011111, B11111111, B01100000, B00000011, B01111111, B11111101, B11001111, B11001101, B11000000, B00011011, B00000100, B00000001, B11111111, B10000000, B00000000,
  B00000000, B00011000, B00000000, B01110000, B00000111, B01100000, B00001101, B11000111, B10001101, B11000000, B00011011, B00000000, B00000011, B11111111, B11000000, B00000000,
  B00000000, B00011000, B00000000, B01111111, B11111111, B01100000, B00001101, B11000000, B00001101, B11111111, B11111011, B11111111, B11100111, B00000000, B11100000, B00000000,
  B00000000, B00011000, B00000000, B00111111, B11111110, B01100000, B00001101, B11000000, B00001100, B11111111, B11111011, B11111111, B11101110, B00000000, B01110000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000100, B00000000, B00100000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00011111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000
};

void setup() {
  Serial.begin(115200);
  Serial.println("Upper Dash V1.0");
  Serial.println("Initializing Shift Registers..");
  // Initialize Shift Registers -------------------------------------------------------
  pinMode(latchPIN,OUTPUT);
  pinMode(clockPIN,OUTPUT);
  pinMode(dataPIN,OUTPUT);
  digitalWrite(latchPIN,LOW);
    shiftOut(dataPIN,clockPIN,MSBFIRST,SR6);
    shiftOut(dataPIN,clockPIN,MSBFIRST,SR5);
    shiftOut(dataPIN,clockPIN,MSBFIRST,SR4);
    shiftOut(dataPIN,clockPIN,MSBFIRST,SR3);
    shiftOut(dataPIN,clockPIN,MSBFIRST,SR2);
    shiftOut(dataPIN,clockPIN,MSBFIRST,SR1);
  digitalWrite(latchPIN,HIGH);
  Serial.println("Shift registers initialized!");

  // initialize 7 Segment values
  seg1 = 255 - (ssB+ssC); // 1
  seg2 = 255 - (ssA+ssB+ssD+ssE+ssG); // 2
  seg3 = 255 - (ssA+ssB+ssC+ssD+ssG); // 3 
  seg4 = 255 - (ssB+ssC+ssF+ssG); // 4
  seg5 = 255 - (ssA+ssC+ssD+ssF+ssG); // 5
  seg6 = 255 - (ssA+ssC+ssD+ssE+ssF+ssG); // 6

  // Initialize OLED ------------------------------------------------------------------
  display.begin(SSD1306_SWITCHCAPVCC);
  display.setTextColor(WHITE);
  display.clearDisplay();
  display.display();

  initSequence();
}

void loop() {    
//    for(int i = 0; i<256; i++) {
//      SR4 = i;
//      SR5 = i;
//      SR6 = i;
//    }

    //statusLEDS();
    gear();
    
      digitalWrite(latchPIN,LOW);
        shiftOut(dataPIN,clockPIN,MSBFIRST,SR6);
        shiftOut(dataPIN,clockPIN,MSBFIRST,SR5);
        shiftOut(dataPIN,clockPIN,MSBFIRST,SR4);
        shiftOut(dataPIN,clockPIN,MSBFIRST,SR3);
        shiftOut(dataPIN,clockPIN,MSBFIRST,SR2);
        shiftOut(dataPIN,clockPIN,MSBFIRST,SR1);
      digitalWrite(latchPIN,HIGH);

      delay(500);
}

void initSequence() {
  // fancy startup sequence
  // display logo on OLED
  dispLogo();
  
  // light each shift light one at a time up and down
  for(int i = 1; i <= 24; i++) {
    switch(i) {
      case 1: SR2 += sLED1; break;
      case 2: SR2 += sLED2; break;
      case 3: SR2 += sLED3; break;
      case 4: SR2 += sLED4; break;
      case 5: SR2 += sLED5; break;
      case 6: SR2 += sLED6; break;
      case 7: SR1 += sLED7; break;
      case 8: SR1 += sLED8; break;
      case 9: SR1 += sLED9; break;
      case 10: SR1 += sLED10; break;
      case 11: SR1 += sLED11; break;
      case 12: SR1 += sLED12; break;
      case 13: SR1 -= sLED12; break;
      case 14: SR1 -= sLED11; break;
      case 15: SR1 -= sLED10; break;
      case 16: SR1 -= sLED9; break;
      case 17: SR1 -= sLED8; break;
      case 18: SR1 -= sLED7; break;
      case 19: SR2 -= sLED6; break;
      case 20: SR2 -= sLED5; break;
      case 21: SR2 -= sLED4; break;
      case 22: SR2 -= sLED3; break;
      case 23: SR2 -= sLED2; break;
      case 24: SR2 -= sLED1; break;
    }
      //randomize colors on the Status LEDS
      int colours[] = {111, 183, 219}; // red green blue 
      randomSeed(analogRead(0));
      SR4 = colours[random(0,3)];
      SR5 = colours[random(0,3)];
      SR6 = colours[random(0,3)];
      
     digitalWrite(latchPIN, LOW);
      shiftOut(dataPIN,clockPIN,MSBFIRST,SR6);
      shiftOut(dataPIN,clockPIN,MSBFIRST,SR5);
      shiftOut(dataPIN,clockPIN,MSBFIRST,SR4);
      shiftOut(dataPIN,clockPIN,MSBFIRST,SR3);
      shiftOut(dataPIN,clockPIN,MSBFIRST,SR2);
      shiftOut(dataPIN,clockPIN,MSBFIRST,SR1);
    digitalWrite(latchPIN, HIGH);

    delay(50);
  }
}

void dispLogo() {
  display.clearDisplay();
  display.drawBitmap(0, 7, QFSAELogo, 128, 50, WHITE);
  display.display();
}

void gear() {
  ssCount++;
  if(ssCount == 7) {
    ssCount = 1;
  }
  switch(ssCount) {
    case 1: SR3 = seg1; break;
    case 2: SR3 = seg2; break;
    case 3: SR3 = seg3; break;
    case 4: SR3 = seg4; break;
    case 5: SR3 = seg5; break;
    case 6: SR3 = seg6; break;
    default: SR3 = seg1; break;
  }
  Serial.println(SR3);
}

void statusLEDS() {
  
}
